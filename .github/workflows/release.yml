name: "publish-release"

on:
  push:
    # tags:
    #   - "v*"

jobs:
  release:
    name: "Publish"
    runs-on: ubuntu-latest
    container: rust
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    #   - name: Download jq
    #     run: |
    #       curl -L https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -o /usr/local/bin/jq
    #       chmod +x /usr/local/bin/jq

    #   - name: Download marine
    #     run: bash $GITHUB_WORKSPACE/.github/download_marine.sh

    #   - name: Cache cargo
    #     uses: actions/cache@v2
    #     with:
    #       path: |
    #         ~/.cargo/registry
    #         ~/.cargo/git
    #         ~/.cargo/bin
    #       key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    #   - name: Install Rust
    #     run: |
    #       rustup toolchain install nightly-2021-04-24-x86_64-unknown-linux-gnu
    #       rustup default nightly-2021-04-24-x86_64-unknown-linux-gnu
    #       rustup target add wasm32-wasi --toolchain nightly-2021-04-24-x86_64-unknown-linux-gnu

    #   - name: Build ipfs-adapter
    #     working-directory: ./service
    #     run: ./build.sh

    #   - name: Create distribution package
    #     working-directory: ./service
    #     run: |
    #       mv artifacts ipfs-adapter
    #       tar -zcvf ipfs-adapter.tar.gz ipfs-adapter

    #   - name: Build Changelog
    #     id: github_release
    #     uses: mikepenz/release-changelog-builder-action@v1
    #     with:
    #       configuration: ".github/workflows/changelog_config.json"
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #   - name: Release
    #     uses: softprops/action-gh-release@v1
    #     with:
    #       name: aqua-ipfs ${{ env.RELEASE_VERSION }}
    #       tag_name: ${{ env.RELEASE_VERSION }}
    #       files: |
    #         ./service/ipfs-adapter.tar.gz
    #       body: ${{steps.github_release.outputs.changelog}}
    #       draft: false
    #       prerelease: false
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # ### Rebuild node-distro
    #   - name: Trigger new node-distro container
    #     uses: benc-uk/workflow-dispatch@v1
    #     with:
    #       workflow: Publish Container
    #       repo: fluencelabs/node-distro
    #       ref: 'main'
    #       token: ${{ secrets.PERSONAL_TOKEN }}

    ### Setup NodeJS registry
      - uses: actions/setup-node@v1
        with:
          node-version: "14"
          registry-url: "https://registry.npmjs.org"

    ### Publish Aqua API
      - name: Publish Aqua API to NPM
        run: |
          npm i
          npm version ${{ env.RELEASE_VERSION }}
          # npm publish --access public
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: ./aqua
      
    ### Publish TS API
      - name: Publish TS API to NPM
        run: |
          npm i
          npm version ${{ env.RELEASE_VERSION }}
          # npm publish --access public
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: ./aqua/target/typescript
